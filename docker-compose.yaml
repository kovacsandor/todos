version: '3'

services:
  kafka:
    image: 'bitnami/kafka'
    ports:
      - '9092:9092'
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_ENABLE_KRAFT=yes
    volumes:
      - './${DATA_PATH:-data}/kafka:/bitnami'

  nginx-proxy:
    container_name: nginx-proxy
    image: nginxproxy/nginx-proxy
    ports:
      - '80:80'
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  client:
    container_name: client-service
    image: todos-client
    build:
      context: client
      dockerfile: ./Dockerfile.dev
    expose:
      - '3000'
    environment:
      - VIRTUAL_HOST=todos.local.com
      - VIRTUAL_PATH=/
    env_file:
      - ./client/.env
    volumes:
      - ./client/src/:/usr/src/app/src/
    depends_on:
      - notification-service
      - task-service
      - user-service

  notification-service:
    container_name: notification-service
    image: todos-notification-service
    build:
      context: notification-service
      dockerfile: ./Dockerfile.dev
    expose:
      - '8082'
    env_file:
      - ./notification-service/.env
    volumes:
      - ./notification-service/src/:/usr/src/app/src/
    depends_on:
      - kafka

  task-service:
    container_name: task-service
    image: todos-task-service
    build:
      context: task-service
      dockerfile: ./Dockerfile.dev
    expose:
      - '8081'
    environment:
      - VIRTUAL_HOST=todos.local.com
      - VIRTUAL_PATH=/api/task-service
    env_file:
      - ./task-service/.env
    volumes:
      - ./task-service/src/:/usr/src/app/src/
    depends_on:
      - kafka
      - nginx-proxy
      - task-service-database

  task-service-database:
    container_name: task-service-database
    image: mongo
    ports:
      - '27081:27017'
    volumes:
      - ./${DATA_PATH:-data}/task-service:/data/db

  user-service:
    container_name: user-service
    image: todos-user-service
    build:
      context: user-service
      dockerfile: ./Dockerfile.dev
    expose:
      - '8080'
    environment:
      - VIRTUAL_HOST=todos.local.com
      - VIRTUAL_PATH=/api/user-service
    env_file:
      - ./user-service/.env
    volumes:
      - ./user-service/src/:/usr/src/app/src/
    depends_on:
      - kafka
      - nginx-proxy
      - user-service-database

  user-service-database:
    container_name: user-service-database
    image: mongo
    ports:
      - '27080:27017'
    volumes:
      - ./${DATA_PATH:-data}/user-service:/data/db
